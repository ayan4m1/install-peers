"use strict";var _path=_interopRequireDefault(require("path")),_npmInstaller=_interopRequireDefault(require("./npm-installer")),_yarnInstaller=_interopRequireDefault(require("./yarn-installer")),_pnpmInstaller=_interopRequireDefault(require("./pnpm-installer")),_resolver=_interopRequireDefault(require("./resolver"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}"production"===process.env.NODE_ENV&&(console.log("Skipping peer dependency installation in production!"),process.exit(0));let rootPath=process.env.INIT_CWD||_path.default.resolve(process.cwd(),"..","..");"node_modules"===_path.default.basename(rootPath)&&(rootPath=_path.default.resolve(rootPath,".."));let found;const resolver=new _resolver.default(rootPath),installers=[new _npmInstaller.default,new _yarnInstaller.default,new _pnpmInstaller.default];for(var _i=0;_i<installers.length;_i++){const a=installers[_i];if(a.shouldRun){process.chdir(rootPath),resolver.packages().then(b=>(console.log(`Installing ${b.length} package${1<b.length?"s":""} using ${a.args.name}...`),a.install(b).then(a=>{console.log(`\n${a}\n`)}))).catch(a=>{console.error(a),process.exit(1)}),found=!0;break}}found||(console.error("Did not find a viable package manager to install peer dependencies with!"),process.exit(1));